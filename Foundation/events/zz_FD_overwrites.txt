namespace = RIP

character_event = {
	id = RIP.29013
	border = GFX_event_normal_frame_intrigue
	desc = EVTDSC_RIP_29013
	picture = GFX_evt_bloody_tools

	is_triggered_only = yes
	hide_from = yes

	option = {
		name = EVTOPTA_RIP_29013
		custom_tooltip = { text = EVTOPTA_RIP_29013_TT }

		hidden_effect = {
			if = {
				limit = {
					has_artifact = rival_skull
				}
				add_character_modifier = {
					name = FD_another_skull
					duration = -1
					stacking = yes
				}
			}
			else = {
				add_artifact = rival_skull
				new_artifact = {
					set_original_owner = event_target:rip_dead
				}
			}
		}

		hidden_tooltip = {
			event_target:rip_widow = { character_event = { id = RIP.29014 } }
			event_target:rip_dead = { any_child = { character_event = { id = RIP.29014 } } }
		}
	}
}

namespace = HFP

### BATTLE EVENT: Decapitating an enemy (fired from HFP.11000)
character_event = {
	id = HFP.11028
	title = the_battle_at_location
	desc = EVTDESC_HFP_11028
	picture = GFX_evt_battle
	border = GFX_event_normal_frame_war
	has_dlc = "Holy Fury"

	is_triggered_only = yes
		
	trigger = {
		event_target:enemy_commander = { always = yes } #There has to be an opponent...
		has_dlc = "Holy Fury"
	}

	immediate = {
		disallow_new_battle_events_effect = yes #to keep the tombola from spamming you...
		battle_commander_counter_positive_effect = yes

		hidden_effect = {
			#Sets up weapons for localization...
			set_dueling_weapon_effect = yes
			event_target:enemy_commander = { set_dueling_weapon_effect = yes }

			### Saved in tombola:
			# event_target:home_commander
			# event_target:enemy_commander (originally FROM)
			# event_target:enemy_liege (originally FROMFROM)
			# event_target:battlefield_location (location of battle)

			### Saved in *this* event:
			# event_target:random_rival_target (if there is one)
			# event_target:home_liege (liege of home_commander, if there is one)

			random_rival = { save_event_target_as = random_rival_target } #For loc and extra fun
			liege = {
				if = { limit = { NOT = { character = ROOT } }
					save_event_target_as = home_liege
				}
			}

			# Send news/notification event to relevant parties...
			if = {
				limit = { enemy_commander_and_liege_are_different_characters = yes }
				event_target:enemy_liege = { character_event = { id = HFP.11032 } } # Send notification of the enemy commander's death (to their liege)
			}
			if = {
				limit = { home_commander_and_liege_are_different_characters = yes }
				event_target:home_liege = { character_event = { id = HFP.11029 } } # Send notification of the enemy commander's death (to your own liege, for bragging rights)
			}
			
			event_target:enemy_commander = {
				##### For tiered rewards...
				if = { #if ROOT fought a worse warrior...
					limit = { duelist_skill_compared_to_prev_low_group_trigger = yes }
					PREV = { set_character_flag = fought_worse_warrior@event_target:enemy_commander }#For later effects...
				}
				else_if = { #if ROOT fought a greater warrior...
					limit = { duelist_skill_compared_to_prev_high_group_trigger = yes }
					PREV = { set_character_flag = fought_great_warrior@event_target:enemy_commander } #For later effects...
				}
				else = { #if ROOT was pretty evenly matched with the enemy warrior...
					PREV = { set_character_flag = fought_even_warrior@event_target:enemy_commander } #For later effects...
				}
				#####
				character_event = { id = HFP.11031 } # Send event to the killed enemy
			}
			if = {
				limit = { multiplayer = yes }
				event_target:enemy_commander = {	
					show_scope_change = no	
					death = {
						death_reason = death_battle 
						killer = ROOT #aka event_target:home_commander
					}
				}
			}
		}	
	}
	
	option = { #Take artifact, get lots of opinion reward...
		name = EVTOPTA_HFP_11028 #I will mount your head on the castle walls!
		
		hidden_effect = {
			set_character_flag = took_enemy_skull
			if = {
				limit = {
					has_artifact = enemy_skull
				}
				add_character_modifier = {
					name = FD_another_skull
					duration = -1
					stacking = yes
				}
			}
			else = {
				add_artifact = enemy_skull 		#Hook-in: Warrior Lodges
				new_artifact = {
					set_original_owner = event_target:enemy_commander
					set_description = enemy_skull_desc

					random_list = { #Randomize names to avoid too much repetition.
						20 = { set_name = enemy_skull_named }
						20 = { #only if not same culture
							set_name = enemy_skull_named_culture
							trigger = { event_target:enemy_commander = { NOT = { culture = ROOT } } }
						}
						20 = { #only if other government could be deemed "barbarian"...
							set_name = enemy_skull_barbarian
							trigger = {
								event_target:enemy_liege = { # Should still be alive (so check against them instead of the commander)...
									OR = {
										AND = {
											government = tribal_government
											ROOT = { NOT = { government = tribal_government } }
										}
										AND = {
											government = nomadic_government
											ROOT = { NOT = { government = nomadic_government } }
										}
									}
								}
							}
						}
					}
				}
			}
			if = {
				limit = { is_landed = yes }
				event_target:home_capital_province = {
					save_persistent_event_target = {
						name = local_fearsome_commander_target		#Hook-in: Warrior Lodges
						scope = event_target:home_commander
					}
				}
			}
		}


		trigger_switch = { #For prestige rewards.
			on_trigger = has_character_flag
			fought_worse_warrior@event_target:enemy_commander = { prestige = 15 }
			fought_even_warrior@event_target:enemy_commander = { prestige = 20 }
			fought_great_warrior@event_target:enemy_commander = { prestige = 30 }
		}
		

		if = { #If you have a liege, slap on some opinion bonus...
			limit = { home_commander_and_liege_are_different_characters = yes }
			event_target:home_liege = {
				show_scope_change = no
				tooltip = {
					opinion = {
		                who = event_target:home_liege
		                modifier = opinion_wildly_impressed
		                years = 10
		            }
				}
	            reverse_opinion = {
	                who = event_target:home_liege
	                modifier = opinion_was_wildly_praised
	                years = 10
	            }
			}
		}
		else = { #Otherwise, just clear flags.
			clr_character_flag = fought_worse_warrior@event_target:enemy_commander
			clr_character_flag = fought_even_warrior@event_target:enemy_commander
			clr_character_flag = fought_great_warrior@event_target:enemy_commander
		}

		### Actual death (if not MP)
		if = {
			limit = { multiplayer = no }
			event_target:enemy_commander = {
				show_scope_change = no
				death = {
					death_reason = death_battle 
					killer = ROOT #aka event_target:home_commander
				}
			}
		}
	}

	option = { #Take no skull artifact, less opinion reward, but become more Kind...
		name = EVTOPTB_HFP_11028 #Or just go in peace...
		
		hidden_effect = {
			if = {
				limit = { is_landed = yes }
				event_target:home_capital_province = {
					save_persistent_event_target = {
						name = local_fearsome_commander_target		#Hook-in: Warrior Lodges
						scope = event_target:home_commander
					}
				}
			}
		}

		if = {
			limit = { trait = cruel }
			remove_trait = cruel
		}
		else = {
			add_trait = kind
		}


		trigger_switch = { #For prestige rewards.
			on_trigger = has_character_flag
			fought_worse_warrior@event_target:enemy_commander = { prestige = 10 }
			fought_even_warrior@event_target:enemy_commander = { prestige = 15 }
			fought_great_warrior@event_target:enemy_commander = { prestige = 25 }
		}
		

		if = { #If you have a liege, slap on some opinion bonus...
			limit = { home_commander_and_liege_are_different_characters = yes }
			event_target:home_liege = {
				show_scope_change = no
				tooltip = {
					opinion = {
		                who = event_target:home_liege
		                modifier = opinion_thoroughly_impressed
		                years = 10
		            }
				}
	            reverse_opinion = {
	                who = event_target:home_liege
	                modifier = opinion_was_thoroughly_praised
	                years = 10
	            }
			}
		}
		else = { #Otherwise, just clear flags.
			clr_character_flag = fought_worse_warrior@event_target:enemy_commander
			clr_character_flag = fought_even_warrior@event_target:enemy_commander
			clr_character_flag = fought_great_warrior@event_target:enemy_commander
		}

		### Actual death (if not MP)
		if = {
			limit = { multiplayer = no }
			event_target:enemy_commander = {
				show_scope_change = no
				death = {
					death_reason = death_battle 
					killer = ROOT #aka event_target:home_commander
				}
			}
		}
	}

	after = {
		allow_new_battle_events_effect = yes
	}
}